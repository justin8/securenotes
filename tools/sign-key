#!/bin/bash

r() { tput setaf 1; tput bold; }
g() { tput setaf 2; tput bold; }
y() { tput setaf 3; tput bold; }
b() { tput setaf 4; tput bold; }
c() { tput sgr0; }
error() { echo "$(r)Error$(c): $*" >&2; }
warning() { echo "$(y)Warning$(c): $*" >&2; }
success() { echo "$(g)Success$(c): $*" >&2; }

usage() {
	cat <<-EOF
	Usage: $(basename "$(readlink "$0")") KEYID
	EOF
}

[[ -z $1 ]] && usage && exit 1
[[ $1 =~ (-h|--help) ]] && usage && exit 0
KEY="$1"

# Get MASTER_KEY from the main script instead of re-defining it
DIR="$(dirname "$(readlink -f "$0")")"
eval $(head "$DIR/../secnotes" | grep MASTER_KEY)

if ! gpg2 --list-secret-keys | grep -q $MASTER_KEY; then
	error 'Unable to find private master key!'
	exit 1
fi

handler() {
	error "Failed to sign and upload key"
	trap - EXIT SIGINT SIGQUIT SIGTERM
	exit
}

trap handler EXIT SIGINT SIGQUIT SIGTERM
set -e

gpg2 -u $MASTER_KEY --sign-key $KEY
gpg2 --send-key $KEY